# The python3 library is lib3, add path by adding "export PYTHONPATH=$PATHONPATH:$HOME/git/RINRUS/lib3"
# Most of the scripts are in bin

# After get a raw pdb file (raw.pdb), check ambiguous atoms, clean up
# Run reduce, generate a new H added pdb file (raw_h.pdb) 
# Example: reduce -NOFLIP 3bwm.pdb > 3bwm_h.ent

# Check the new pdb file, if there is metal, replace with an atom with same coordination (such as replace Mg with O)
# Check all ligands, make sure H atoms were added correctly (may need to delete or add more H based on certain condition)
# If there is atom "CA" or "CB" in ligands, replace with "CA'" and "CB'"
# After previous 3 check stpes, save the file to a new file (raw_h_modify.pdb)
# Use this new pdb file (raw_h_modify.pdb), run probe and save result to *.probe
# Run probe to generate correct probe file
# Example: probe -unformated -MC -self "all" 3bwm_h.ent > 3bwm_h.probe

# Run probe2rins.py to generate freq_per_res.dat
# Example: python3 bin/probe2rins.py -f 3bwm_h.probe -s A:300,A:301,A:302

# Run freq_per_res.dat file for trim residues
# Example: python3 bin/probe_freq_2pdb.py 3bwm_h_mg.ent 3bwm_h.probe freq_per_res.dat A,300,A,301,A,302

# Use raw_h.pdb, freq_per_res.dat, and other needed files run probe_freq_2pdb.py
# Run pymol_scripts.py to add H to the trimmed pdb files for differnt size model

# Run pymol_scripts.py to add H to res_*.pdb, which generate a log.pml file, and then run pymol -qc log.pml
# Example: python3 bin/pymol_scripts.py res_*.pdb 301,302
#          pymol -qc log.pml

# Run write_input.py to generate template file and input file
# Example: python3 bin/write_input.py -noh res_*.pdb -adh res_*_h.pdb -intmp input_templat
